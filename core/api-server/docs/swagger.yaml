basePath: /api
definitions:
  models.Task:
    properties:
      action:
        type: string
      data:
        type: string
      id:
        type: string
      queue:
        type: string
      timestamp:
        type: string
      user:
        type: string
    type: object
  response.LoginJWT:
    properties:
      code:
        example: 200
        type: integer
      expire:
        example: "2021-04-27T16:49:08+02:00"
        type: string
      token:
        example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY3Rpb25zIjpbXSwiZXhwIjoxNjE5NTM0OTQ4LCJpZCI6ImVkb2FyZG8iLCJvcmlnX2lhdCI6MTYxODkzMDE0OCwicm9sZSI6IiJ9.bNRFa7MCQK-rTczOjLveXEWBqhjK-FWhnUPD3_ixcCI
        type: string
    type: object
  response.StatusBadRequest:
    properties:
      code:
        example: 400
        type: integer
      data:
        type: object
      message:
        example: Bad request
        type: string
    type: object
  response.StatusCreated:
    properties:
      code:
        example: 201
        type: integer
      data:
        type: object
      message:
        example: Created
        type: string
    type: object
  response.StatusInternalServerError:
    properties:
      code:
        example: 500
        type: integer
      data:
        type: object
      message:
        example: Internal server error
        type: string
    type: object
  response.StatusOK:
    properties:
      code:
        type: object
    type: object
host: localhost:8080
info:
  contact:
    name: NethServer Developer Team
    url: https://nethserver.org/support
  description: NethServer 8 API is used to create tasks across the nodes
  license:
    name: GNU GENERAL PUBLIC LICENSE
  termsOfService: https://nethserver.org/terms/
  title: NethServer 8 API
  version: "1.0"
paths:
  /login:
    post:
      description: login and get JWT token
      parameters:
      - description: Username
        in: body
        name: username
        required: true
        schema:
          type: string
      - description: Password
        in: body
        name: password
        required: true
        schema:
          type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer <valid.JWT.token>
              type: string
          schema:
            $ref: '#/definitions/response.LoginJWT'
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusInternalServerError'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
      summary: Login and get JWT token
      tags:
      - /login auth
  /logout:
    post:
      description: logout and remove JWT token
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer <valid.JWT.token>
              type: string
          schema:
            $ref: '#/definitions/response.StatusOK'
        "500":
          description: Internal Server Error
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusInternalServerError'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
      summary: Login and remove JWT token
      tags:
      - /logout auth
  /tasks/cluster:
    get:
      description: get cluster tasks
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer <valid.JWT.token>
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusOK'
            - properties:
                code:
                  type: integer
                data:
                  items:
                    $ref: '#/definitions/models.Task'
                  type: array
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusBadRequest'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
      summary: Get the list of current cluster tasks
      tags:
      - /tasks cluster
    post:
      description: create a cluster task
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer <valid.JWT.token>
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusCreated'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/models.Task'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusBadRequest'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
      summary: Create and queue a cluster task
      tags:
      - /tasks cluster
  /tasks/cluster/{task_id}/{file}:
    get:
      description: get task statuses (output, error, exit_code)
      parameters:
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: string
      - description: 'Must be: `output`, `error`, `exit_code`'
        in: path
        name: file
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer <valid.JWT.token>
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusOK'
            - properties:
                code:
                  type: integer
                data:
                  type: string
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusBadRequest'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
      summary: Get the output, error or exit code of a cluster task
      tags:
      - /tasks cluster
  /tasks/module/{module_id}:
    get:
      description: get module tasks
      parameters:
      - description: Module ID
        in: path
        name: module_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer <valid.JWT.token>
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusOK'
            - properties:
                code:
                  type: integer
                data:
                  items:
                    $ref: '#/definitions/models.Task'
                  type: array
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusBadRequest'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
      summary: Get the list of current module tasks
      tags:
      - /tasks module
    post:
      description: create a module task
      parameters:
      - description: Module ID
        in: path
        name: module_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer <valid.JWT.token>
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusCreated'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/models.Task'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusBadRequest'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
      summary: Create and queue a module task
      tags:
      - /tasks module
  /tasks/module/{module_id}/{task_id}/{file}:
    get:
      description: get task statuses (output, error, exit_code)
      parameters:
      - description: Module ID
        in: path
        name: module_id
        required: true
        type: string
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: string
      - description: 'Must be: `output`, `error`, `exit_code`'
        in: path
        name: file
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer <valid.JWT.token>
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusOK'
            - properties:
                code:
                  type: integer
                data:
                  type: string
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusBadRequest'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
      summary: Get the output, error or exit code of a module task
      tags:
      - /tasks module
  /tasks/node/{node_id}:
    get:
      description: get node tasks
      parameters:
      - description: Node ID
        in: path
        name: node_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer <valid.JWT.token>
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusOK'
            - properties:
                code:
                  type: integer
                data:
                  items:
                    $ref: '#/definitions/models.Task'
                  type: array
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusBadRequest'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
      summary: Get the list of current node tasks
      tags:
      - /tasks node
    post:
      description: create a node task
      parameters:
      - description: Node ID
        in: path
        name: node_id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer <valid.JWT.token>
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusCreated'
            - properties:
                code:
                  type: integer
                data:
                  $ref: '#/definitions/models.Task'
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusBadRequest'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
      summary: Create and queue a node task
      tags:
      - /tasks node
  /tasks/node/{node_id}/{task_id}/{file}:
    get:
      description: get task statuses (output, error, exit_code)
      parameters:
      - description: Node ID
        in: path
        name: node_id
        required: true
        type: string
      - description: Task ID
        in: path
        name: task_id
        required: true
        type: string
      - description: 'Must be: `output`, `error`, `exit_code`'
        in: path
        name: file
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          headers:
            Authorization:
              description: Bearer <valid.JWT.token>
              type: string
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusOK'
            - properties:
                code:
                  type: integer
                data:
                  type: string
                message:
                  type: string
              type: object
        "400":
          description: Bad Request
          schema:
            allOf:
            - $ref: '#/definitions/response.StatusBadRequest'
            - properties:
                code:
                  type: integer
                data:
                  type: object
                message:
                  type: string
              type: object
      summary: Get the output, error or exit code of a node task
      tags:
      - /tasks node
swagger: "2.0"
