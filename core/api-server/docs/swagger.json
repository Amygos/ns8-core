{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "NethServer 8 API is used to create tasks across the nodes",
        "title": "NethServer 8 API",
        "termsOfService": "https://nethserver.org/terms/",
        "contact": {
            "name": "NethServer Developer Team",
            "url": "https://nethserver.org/support"
        },
        "license": {
            "name": "GNU GENERAL PUBLIC LICENSE"
        },
        "version": "1.0"
    },
    "host": "localhost:8080",
    "basePath": "/api",
    "paths": {
        "/cluster/task/{task_id}/context": {
            "get": {
                "description": "get task statuses (context)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/tasks cluster"
                ],
                "summary": "Get the context of a cluster task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusOK"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusBadRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/cluster/task/{task_id}/status": {
            "get": {
                "description": "get task statuses (output, error, exit_code)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/tasks cluster"
                ],
                "summary": "Get the output, error or exit code of a cluster task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusOK"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusBadRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/cluster/tasks": {
            "get": {
                "description": "get cluster tasks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/tasks cluster"
                ],
                "summary": "Get the list of current cluster tasks",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusOK"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Task"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusBadRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "create a cluster task",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/tasks cluster"
                ],
                "summary": "Create and queue a cluster task",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusCreated"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/models.Task"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusBadRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "login and get JWT token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/login auth"
                ],
                "summary": "Login and get JWT token",
                "parameters": [
                    {
                        "description": "The user to login",
                        "name": "user",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/response.LoginRequestJWT"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.LoginResponseJWT"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusInternalServerError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/logout": {
            "post": {
                "description": "logout and remove JWT token",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/logout auth"
                ],
                "summary": "Login and remove JWT token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusOK"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusInternalServerError"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/module/{module_id}/task/{task_id}/context": {
            "get": {
                "description": "get task statuses (context)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/tasks module"
                ],
                "summary": "Get the context of a module task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module ID",
                        "name": "module_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusOK"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusBadRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/module/{module_id}/task/{task_id}/status": {
            "get": {
                "description": "get task statuses (output, error, exit_code)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/tasks module"
                ],
                "summary": "Get the output, error or exit code of a module task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module ID",
                        "name": "module_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusOK"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusBadRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/module/{module_id}/tasks": {
            "get": {
                "description": "get module tasks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/tasks module"
                ],
                "summary": "Get the list of current module tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module ID",
                        "name": "module_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusOK"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Task"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusBadRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "create a module task",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/tasks module"
                ],
                "summary": "Create and queue a module task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Module ID",
                        "name": "module_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusCreated"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/models.Task"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusBadRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/node/{node_id}/task/{task_id}/context": {
            "get": {
                "description": "get task statuses (context)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/tasks node"
                ],
                "summary": "Get the context of a node task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "node_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusOK"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusBadRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/node/{node_id}/task/{task_id}/status": {
            "get": {
                "description": "get task statuses (output, error, exit_code)",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/tasks node"
                ],
                "summary": "Get the output, error or exit code of a node task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "node_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Task ID",
                        "name": "task_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusOK"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "string"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusBadRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        },
        "/node/{node_id}/tasks": {
            "get": {
                "description": "get node tasks",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/tasks node"
                ],
                "summary": "Get the list of current node tasks",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "node_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusOK"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/definitions/models.Task"
                                            }
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusBadRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            },
            "post": {
                "description": "create a node task",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "/tasks node"
                ],
                "summary": "Create and queue a node task",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Node ID",
                        "name": "node_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusCreated"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "$ref": "#/definitions/models.Task"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        },
                        "headers": {
                            "Authorization": {
                                "type": "string",
                                "description": "Bearer \u003cvalid.JWT.token\u003e"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "allOf": [
                                {
                                    "$ref": "#/definitions/response.StatusBadRequest"
                                },
                                {
                                    "type": "object",
                                    "properties": {
                                        "code": {
                                            "type": "integer"
                                        },
                                        "data": {
                                            "type": "object"
                                        },
                                        "message": {
                                            "type": "string"
                                        }
                                    }
                                }
                            ]
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.Task": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "data": {
                    "type": "object"
                },
                "id": {
                    "type": "string"
                },
                "parent": {
                    "type": "string"
                },
                "queue": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "user": {
                    "type": "string"
                }
            }
        },
        "response.LoginRequestJWT": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string",
                    "example": "Nethesis,1234"
                },
                "username": {
                    "type": "string",
                    "example": "edoardo"
                }
            }
        },
        "response.LoginResponseJWT": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 200
                },
                "expire": {
                    "type": "string",
                    "example": "2021-04-27T16:49:08+02:00"
                },
                "token": {
                    "type": "string",
                    "example": "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJhY3Rpb25zIjpbXSwiZXhwIjoxNjE5NTM0OTQ4LCJpZCI6ImVkb2FyZG8iLCJvcmlnX2lhdCI6MTYxODkzMDE0OCwicm9sZSI6IiJ9.bNRFa7MCQK-rTczOjLveXEWBqhjK-FWhnUPD3_ixcCI"
                }
            }
        },
        "response.StatusBadRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 400
                },
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Bad request"
                }
            }
        },
        "response.StatusCreated": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 201
                },
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Created"
                }
            }
        },
        "response.StatusInternalServerError": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "integer",
                    "example": 500
                },
                "data": {
                    "type": "object"
                },
                "message": {
                    "type": "string",
                    "example": "Internal server error"
                }
            }
        },
        "response.StatusOK": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "object"
                }
            }
        }
    }
}