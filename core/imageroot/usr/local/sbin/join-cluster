#!/usr/bin/env python3

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import sys
import agent
import argparse
import hashlib
import uuid
import json
import os
from envparse import env


# Import the cluster credentials in the environment for agent.redis_connect
if 'AGENT_ID' in os.environ:
    del(os.environ['AGENT_ID'])
if 'REDIS_PASSWORD' in os.environ:
    del(os.environ['REDIS_PASSWORD'])
env.read_envfile('/var/lib/nethserver/cluster/state/agent.env')

tlsverify = True

parser = argparse.ArgumentParser()
parser.add_argument('url')
parser.add_argument('token')
parser.add_argument('--listenport', default=55820, type=int)
parser.add_argument('--no-tlsverify', dest='tlsverify', action='store_false')

args = parser.parse_args()

taskdata = {
    "url": args.url,
    "jwt": args.token,
    "listen_port": args.listenport,
    "tls_verify": args.tlsverify,
}

taskobj = {
    "id": str(uuid.uuid4()),
    "action": "join-cluster",
    "data": json.dumps(taskdata),
}

rdb = agent.redis_connect(privileged=True)
assert rdb.lpush('cluster/tasks', json.dumps(taskobj)) >= 0

print("Task queued, check journalctl.")
