#!/usr/bin/env python3

#
# Copyright (C) 2021 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

import os
import sys
import json
import agent
import uuid
import hashlib

def save_agent_env(module_id):
    """Generate and persist the Redis password for module_id
    """
    oldmask = os.umask(0o77)
    redis_password = str(uuid.uuid4())
    with open('state/agent.env', 'w') as agentenv:
        agentenv.write(f'REDIS_USER=module/{module_id}\n')
        agentenv.write(f'REDIS_PASSWORD={redis_password}\n')
    os.umask(oldmask)
    return hashlib.sha256(redis_password.encode()).hexdigest()

request = json.load(sys.stdin)
image_id = request['image']
module_id = request['module']

# Read from DB the rootfull flag state:
with agent.redis_connect() as ro:
    image = ro.hgetall(f'image/{image_id}')
    is_rootfull = image.get('rootfull', "0") == "1"
    assert image['url']

# Push the creation task for the new module. Its agent will pick up it during the first boot. 
with agent.redis_connect(privileged=True) as rw:
    subtask_id = str(uuid.uuid4())
    rw.lpush(f'module/{module_id}/tasks', json.dumps({
        "id": subtask_id,
        "action": "create-module",
        "data": "",
    }))

# Launch the module agent (async)
if is_rootfull:
    # Create the module dirs structure
    os.mkdir(f'/var/lib/nethserver/{module_id}/')
    os.mkdir(f'/var/lib/nethserver/{module_id}/state', mode=0o700)
    # Extract the module imageroot
    os.chdir(f'/var/lib/nethserver/{module_id}')
    redis_sha256 = save_agent_env(module_id)
    agent.run_helper('extract-image', image['url']).check_returncode()
    # Start the module agent
    agent.run_helper('systemctl', 'enable', '--now', f'agent@{module_id}.service').check_returncode()
else: # rootless
    # Create the module dirs structure
    agent.run_helper('useradd', '-m', '-k', '/etc/nethserver/skel', '-s', '/bin/bash', module_id).check_returncode()
    os.chdir(f'/home/{module_id}/.config')
    redis_sha256 = save_agent_env(module_id)
    # Extract the module imageroot and fix CWD permissions recursively
    agent.run_helper('extract-image', image['url']).check_returncode()
    # Start the module agent
    agent.run_helper('loginctl', 'enable-linger', module_id).check_returncode()

json.dump({
    "redis_sha256":redis_sha256,
    "rootfull": is_rootfull,
    "subtask":subtask_id,
}, sys.stdout)
