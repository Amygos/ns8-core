name: core
on:
  push:
    branches:
      - main
    paths:
      - 'core/**'
  pull_request:
    types: ['opened', 'synchronize']
    paths:
      - 'core/**'

jobs:
  push_image:
    env:
      REPONAME: ${{ github.workflow }}
      IMAGETAG: ${{ github.head_ref }}
    name: 'Build ${{ github.workflow }}'
    runs-on: ubuntu-20.04
    steps:
      - id: info
        name: "Retrieve runtime information"
        run: |
          echo "::set-output name=images-dir::$(buildah info --format '{{.store.GraphRoot}}/overlay-images')"
          echo "::set-output name=weekstamp::$(date +%YW%W)"
          echo "::set-output name=org::$(dirname ${GITHUB_REPOSITORY} | tr '[:upper:]' '[:lower:]')"
      - id: checkout
        uses: actions/checkout@v2
      - id: corecache
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.info.outputs.images-dir }}
            ${{ github.workflow }}/.golang-cache
            ${{ github.workflow }}/ui/node_modules
          key: "corecache-${{ steps.info.outputs.weekstamp }}-${{ hashFiles('core/ui/yarn.lock', 'core/agent/go.*', 'core/api-server/go.*', 'core/build-image.sh') }}"
      - id: build
        name: "Build the images"
        run: "cd ${REPONAME} && bash build-image.sh"
        env:
          REPOBASE: ghcr.io/${{ steps.info.outputs.org }}
      - id: push
        name: "Push the images"
        run: |
          # Push the images
          set -e
          trap 'buildah logout ghcr.io' EXIT
          buildah login -u ${{ github.actor }} --password-stdin ghcr.io <<<"${{ secrets.GITHUB_TOKEN }}"
          for image in ${{ steps.build.outputs.images }} ; do buildah push $image docker://${image}:${IMAGETAG:-latest} ; done
  test_image:
    needs: push_image
    name: "Test ${{ github.workflow }}"
    runs-on: [self-hosted, ns8-runner]
    steps:
      - id: checkout
        uses: actions/checkout@v2
      - id: test
        env:
          RF_IMAGE: "ghcr.io/marketsquare/robotframework-browser/rfbrowser-stable:v7.1.1"
        name: "Run the tests suite"
        run: |
          # Run the tests suite
          sudo dnf install podman -y
          rm -rf ~/_ssh
          cp -r --no-preserve=mode ~/.ssh ~/_ssh
          mkdir -p -m 777 ~/out
          podman run -i -v ~/out:/home/pwuser/out:Z -v ~/_ssh:/home/pwuser/.ssh:Z -v ${PWD}:/home/pwuser/work:Z --network=host --rm ${RF_IMAGE} bash -s <<EOF
          set -e -x
          cd ~/work/${{ github.workflow }}
          pip install -r tests/pythonreq.txt
          robot -v 'BRANCHMODULES:' -v COREBRANCH:${{ github.head_ref }} -d ~/out/run-${{ github.run_id }} tests
          EOF
