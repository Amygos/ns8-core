name: Test Core Modules
on:
  pull_request:
    types:
      - "labeled"
  workflow_dispatch:
env:
  TF_VAR_project: "NS8-CI"
  TF_VAR_domain: "ci.nethserver.net"
  NS8_LEADER_NAME: "fc1"
  NS8_CORE_MODULES: "core traefik loki promtail ldapproxy"

jobs:
  ns8_modules:
    if: |
      github.event_name == 'workflow_dispatch' ||
      github.event.label.name == 'testing'
    name: Find modules to test
    runs-on: ubuntu-latest
    outputs:
      list: ${{ steps.modules.outputs.list }}
      tag: ${{ steps.tag.outputs.name }}
    steps:
      - id: tag
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ]
          then
            tag=${{ github.head_ref }}
          else
            tag="${{ github.ref_name }}"
          fi
          if [ "$tag" = "main" ]
          then
            tag="latest"
          fi
          echo "::set-output name=name::${tag}"
      - id: modules
        run: |
          modules_list='[]'
          for module in ${NS8_CORE_MODULES}
          do
            res=$(podman search --limit 150 --list-tags   --format json   ghcr.io/nethserver/traefik | jq 'any(.[].Tags[]; . == "${{ steps.tag.outputs.name }}")')
            if [ "$res" = "true" ]
            then
              modules_list=$(echo "${modules_list}"  | jq -c --arg m ${module} ' . + [$m]')
            fi
          done
          echo "::set-output name=list::${modules_list}"
  infra_create:
    name: "Create the infrastructure"
    runs-on: ubuntu-latest
    needs: ns8_modules
    steps:
      - uses: actions/checkout@v2
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
        with:
          terraform_wrapper: false
      - name: HashiCorp - Terraform Apply
        env:
          TF_VAR_do_token: ${{ secrets.do_token }}
        run: |
          terraform init
          terraform workspace new ${{ needs.ns8_modules.outputs.tag }}-${{ github.sha }}
          terraform apply -var 'leader_node={"${{ env.NS8_LEADER_NAME }}":"ams3"}' -auto-approve
        working-directory: ${{ github.workspace }}/tests/infra
      - name: HashiCorp - Terraform Output Deploy Key
        run: terraform output -raw deploy-key > ${{ github.workspace }}/key
        working-directory: ${{ github.workspace }}/tests/infra
      - name: Save Deploy Key
        uses: actions/upload-artifact@v2
        with:
          name: deploy-key
          path: ${{ github.workspace }}/key
          retention-days: 1
      - name: Save Terraform State
        uses: actions/upload-artifact@v2
        with:
          name: terraform.tfstate
          path: ${{ github.workspace }}/tests/infra/terraform.tfstate.d/${{ needs.ns8_modules.outputs.tag }}-${{ github.sha }}/terraform.tfstate
          retention-days: 1
  core:
    name: "Core tests"
    runs-on: ubuntu-latest
    needs:
      - infra_create
      - ns8_modules
    steps:
      - uses: actions/checkout@v2
      - name: Get Deploy Key
        uses: actions/download-artifact@v2
        with:
          name: deploy-key
          path: ${{ github.workspace }}/
      - name: Run tests
        run: |
          podman run -v ${{ github.workspace }}/:/home/pwuser/ns8-scratchpad:z -i --name rf-runner ghcr.io/marketsquare/robotframework-browser/rfbrowser-stable:v10.0.3 bash -l -s <<EOF
          set -e -x
          pip install -r /home/pwuser/ns8-scratchpad/core/tests/pythonreq.txt
          mkdir ~/outputs
          cd /home/pwuser/ns8-scratchpad/core/
          robot -v NODE_ADDR:${{ env.NS8_LEADER_NAME }}.leader.${{ needs.ns8_modules.outputs.tag }}-${{ github.sha }}.${{ env.TF_VAR_domain }} \
            -v SSH_KEYFILE:/home/pwuser/ns8-scratchpad/key \
            -v COREBRANCH:${{ needs.ns8_modules.outputs.tag }} \
            -v COREMODULES:${{ join(fromJSON(needs.ns8_modules.outputs.list), ',' ) }} \
            -d ~/outputs /home/pwuser/ns8-scratchpad/core/tests/
          EOF
      - name: export logs
        if: always()
        run: podman cp rf-runner:/home/pwuser/outputs ${{ github.workspace }}/
        working-directory: ${{ github.workspace }}
      - name: Save tests results
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: core-tests-logs
          path: |
             ${{ github.workspace }}/outputs/output.xml
             ${{ github.workspace }}/outputs/log.html
             ${{ github.workspace }}/outputs/report.html
  infra_destroy:
    name: "Destroy the infrastructure"
    runs-on: ubuntu-latest
    needs: core
    if: always()
    steps:
      - uses: actions/checkout@v2
      - name: HashiCorp - Setup Terraform
        uses: hashicorp/setup-terraform@v1.2.1
      - name: Get Terraform State
        uses: actions/download-artifact@v2
        with:
          name: terraform.tfstate
          path: |
             ${{ github.workspace }}/tests/infra/
      - name: Destroy the infrastructure
        env:
          TF_VAR_do_token: ${{ secrets.do_token }}
        run: |
          terraform init
          terraform apply -destroy -auto-approve
        working-directory: ${{ github.workspace }}/tests/infra
